// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication3.Data;

namespace WebApplication3.Migrations
{
    [DbContext(typeof(WebApplication3Context))]
    partial class WebApplication3ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication3.Models.Bikes", b =>
                {
                    b.Property<int>("BikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("BikeId");

                    b.HasIndex("BrandId");

                    b.ToTable("Bikes");

                    b.HasData(
                        new
                        {
                            BikeId = 1,
                            BrandId = 1,
                            Currency = "SEK",
                            Model = "Community S",
                            Price = 300
                        },
                        new
                        {
                            BikeId = 2,
                            BrandId = 2,
                            Currency = "SEK",
                            Model = "Women's Cruiser",
                            Price = 375
                        },
                        new
                        {
                            BikeId = 3,
                            BrandId = 3,
                            Currency = "SEK",
                            Model = "City Classic",
                            Price = 300
                        },
                        new
                        {
                            BikeId = 4,
                            BrandId = 2,
                            Currency = "SEK",
                            Model = "Speed Roller+",
                            Price = 300
                        },
                        new
                        {
                            BikeId = 5,
                            BrandId = 3,
                            Currency = "SEK",
                            Model = "Street 687",
                            Price = 450
                        },
                        new
                        {
                            BikeId = 6,
                            BrandId = 1,
                            Currency = "SEK",
                            Model = "Urban City Commuter",
                            Price = 300
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Bookings", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BikeId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("BikeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BikeId = 1,
                            CustomerId = 1,
                            Duration = "1 DAY",
                            Quantity = 1
                        },
                        new
                        {
                            BookingId = 2,
                            BikeId = 1,
                            CustomerId = 1,
                            Duration = "1 DAY",
                            Quantity = 1
                        },
                        new
                        {
                            BookingId = 3,
                            BikeId = 3,
                            CustomerId = 6,
                            Duration = "1 DAY",
                            Quantity = 1
                        },
                        new
                        {
                            BookingId = 4,
                            BikeId = 2,
                            CustomerId = 7,
                            Duration = "1 DAY",
                            Quantity = 1
                        },
                        new
                        {
                            BookingId = 5,
                            BikeId = 1,
                            CustomerId = 2,
                            Duration = "1 DAY",
                            Quantity = 1
                        },
                        new
                        {
                            BookingId = 6,
                            BikeId = 5,
                            CustomerId = 9,
                            Duration = "1 DAY",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufactureId")
                        .HasColumnType("int");

                    b.HasKey("BrandId");

                    b.HasIndex("ManufactureId");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            BrandName = "Yosemity",
                            ManufactureId = 1
                        },
                        new
                        {
                            BrandId = 2,
                            BrandName = "Nassau",
                            ManufactureId = 2
                        },
                        new
                        {
                            BrandId = 3,
                            BrandName = "Kildemose",
                            ManufactureId = 3
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Customers", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            EmailAddress = "jonse@hotmail.com",
                            FirstName = "Anna",
                            LastName = "Johnson",
                            PhoneNumber = 123456789
                        },
                        new
                        {
                            CustomerId = 2,
                            EmailAddress = "eivindarbast@ingemann.se",
                            FirstName = "Eivind",
                            LastName = "Ingemann",
                            PhoneNumber = 123456789
                        },
                        new
                        {
                            CustomerId = 3,
                            EmailAddress = "magdalena.nilson@hotmail.com",
                            FirstName = "Magdalena",
                            LastName = "Nilson",
                            PhoneNumber = 123456789
                        },
                        new
                        {
                            CustomerId = 4,
                            EmailAddress = "herman.nilson@hotmail.com",
                            FirstName = "Herman",
                            LastName = "Nilson",
                            PhoneNumber = 123456789
                        },
                        new
                        {
                            CustomerId = 5,
                            EmailAddress = "gullwijose@gmail.com",
                            FirstName = "Gullwi",
                            LastName = "Josefsson",
                            PhoneNumber = 123456789
                        },
                        new
                        {
                            CustomerId = 6,
                            EmailAddress = "masterdetectiv@protonmail.com",
                            FirstName = "Kalle",
                            LastName = "Blomqvist",
                            PhoneNumber = 123456789
                        },
                        new
                        {
                            CustomerId = 7,
                            EmailAddress = "hernandez.julia@yahoo.com",
                            FirstName = "Julia",
                            LastName = "Hernandéz",
                            PhoneNumber = 123456789
                        },
                        new
                        {
                            CustomerId = 8,
                            EmailAddress = "felixfelicis@gmail.com",
                            FirstName = "Felix",
                            LastName = "Ingvarsson",
                            PhoneNumber = 123456789
                        },
                        new
                        {
                            CustomerId = 9,
                            EmailAddress = "olsongänget@gmail.com",
                            FirstName = "Matts",
                            LastName = "Olson",
                            PhoneNumber = 123456789
                        },
                        new
                        {
                            CustomerId = 10,
                            EmailAddress = "Linda@Nyberg.se",
                            FirstName = "Linda",
                            LastName = "Nyberg",
                            PhoneNumber = 123456789
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Manufacture", b =>
                {
                    b.Property<int>("ManufactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManufactureName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufactureId");

                    b.ToTable("Manufacture");

                    b.HasData(
                        new
                        {
                            ManufactureId = 1,
                            ManufactureName = "Biltema"
                        },
                        new
                        {
                            ManufactureId = 2,
                            ManufactureName = "Huffy"
                        },
                        new
                        {
                            ManufactureId = 3,
                            ManufactureName = "Kildemose"
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Bikes", b =>
                {
                    b.HasOne("WebApplication3.Models.Brand", "Brand")
                        .WithMany("Bikes")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("WebApplication3.Models.Bookings", b =>
                {
                    b.HasOne("WebApplication3.Models.Bikes", "Bike")
                        .WithMany("Bookings")
                        .HasForeignKey("BikeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.Customers", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bike");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebApplication3.Models.Brand", b =>
                {
                    b.HasOne("WebApplication3.Models.Manufacture", "Manufacture")
                        .WithMany("Brands")
                        .HasForeignKey("ManufactureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacture");
                });

            modelBuilder.Entity("WebApplication3.Models.Bikes", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("WebApplication3.Models.Brand", b =>
                {
                    b.Navigation("Bikes");
                });

            modelBuilder.Entity("WebApplication3.Models.Customers", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("WebApplication3.Models.Manufacture", b =>
                {
                    b.Navigation("Brands");
                });
#pragma warning restore 612, 618
        }
    }
}
